#!/bin/bash

# –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Word Complexity API
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ –≤–∏–¥—ã —Ç–µ—Å—Ç–æ–≤

set -e  # –í—ã—Ö–æ–¥ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

echo "üß™ –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Word Complexity API"
echo "=========================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
command -v docker >/dev/null 2>&1 || { echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"; exit 1; }
command -v docker-compose >/dev/null 2>&1 || { echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"; exit 1; }

# –ó–∞–ø—É—Å–∫ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
echo "üöÄ –ó–∞–ø—É—Å–∫ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã..."
docker-compose up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose ps

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ë–î –¥–ª—è —Ç–µ—Å—Ç–æ–≤
echo "üóÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
docker-compose exec -T web rails db:create db:migrate RAILS_ENV=development || true
docker-compose exec -T web rails db:create db:migrate RAILS_ENV=test || true

# –ó–∞–ø—É—Å–∫ RSpec —Ç–µ—Å—Ç–æ–≤
echo "üß™ –ó–∞–ø—É—Å–∫ RSpec —Ç–µ—Å—Ç–æ–≤..."
if command -v bundle >/dev/null 2>&1; then
    echo "  ‚Üí –õ–æ–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ RSpec"
    RAILS_ENV=test bundle exec rspec --format documentation
else
    echo "  ‚Üí Docker –∑–∞–ø—É—Å–∫ RSpec"
    docker-compose exec -T web bash -c "RAILS_ENV=test bundle exec rspec --format documentation"
fi

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –≤ Hybrid —Ä–µ–∂–∏–º–µ
echo "üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –≤ Hybrid —Ä–µ–∂–∏–º–µ..."
make hybrid
sleep 5

echo "  ‚Üí –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏..."
RESPONSE=$(curl -s -X POST http://localhost:3000/complexity-score \
  -H "Content-Type: application/json" \
  -d '["test", "hybrid", "mode"]')

JOB_ID=$(echo $RESPONSE | grep -o '"job_id":"[^"]*"' | cut -d'"' -f4)
echo "  ‚Üí Job ID: $JOB_ID"

if [ -z "$JOB_ID" ]; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É –≤ Hybrid —Ä–µ–∂–∏–º–µ"
    exit 1
fi

echo "  ‚Üí –û–∂–∏–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏..."
sleep 3

echo "  ‚Üí –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞..."
RESULT=$(curl -s -X GET "http://localhost:3000/complexity-score/$JOB_ID")
echo "  ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: $RESULT"

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –≤ Redis-Only —Ä–µ–∂–∏–º–µ
echo "üì¶ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –≤ Redis-Only —Ä–µ–∂–∏–º–µ..."
make redis-only
sleep 5

echo "  ‚Üí –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏..."
RESPONSE=$(curl -s -X POST http://localhost:3000/complexity-score \
  -H "Content-Type: application/json" \
  -d '["test", "redis", "only"]')

JOB_ID=$(echo $RESPONSE | grep -o '"job_id":"[^"]*"' | cut -d'"' -f4)
echo "  ‚Üí Job ID: $JOB_ID"

if [ -z "$JOB_ID" ]; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É –≤ Redis-Only —Ä–µ–∂–∏–º–µ"
    exit 1
fi

echo "  ‚Üí –û–∂–∏–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏..."
sleep 3

echo "  ‚Üí –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞..."
RESULT=$(curl -s -X GET "http://localhost:3000/complexity-score/$JOB_ID")
echo "  ‚Üí –†–µ–∑—É–ª—å—Ç–∞—Ç: $RESULT"

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤
echo "üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤..."
make hybrid
sleep 2
HYBRID_STATUS=$(make status 2>/dev/null | grep -o "Hybrid\|Redis-Only" || echo "Unknown")
echo "  ‚Üí Hybrid —Ä–µ–∂–∏–º: $HYBRID_STATUS"

make redis-only
sleep 2
REDIS_STATUS=$(make status 2>/dev/null | grep -o "Hybrid\|Redis-Only" || echo "Unknown")
echo "  ‚Üí Redis-Only —Ä–µ–∂–∏–º: $REDIS_STATUS"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
echo "‚ö° –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏..."
echo "  ‚Üí –°–æ–∑–¥–∞–Ω–∏–µ 5 –∑–∞–¥–∞—á –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ..."

for i in {1..5}; do
    curl -s -X POST http://localhost:3000/complexity-score \
      -H "Content-Type: application/json" \
      -d "[\"word$i\", \"test$i\"]" &
done

wait
echo "  ‚Üí –í—Å–µ –∑–∞–¥–∞—á–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã
echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã..."

echo "  ‚Üí Redis..."
REDIS_STATUS=$(redis-cli -p 6380 ping 2>/dev/null || echo "FAILED")
echo "    Redis: $REDIS_STATUS"

echo "  ‚Üí PostgreSQL..."
PG_STATUS=$(docker-compose exec -T db pg_isready -U postgres 2>/dev/null | grep "accepting" || echo "FAILED")
echo "    PostgreSQL: $(echo $PG_STATUS | grep -o 'accepting connections' || echo 'FAILED')"

echo "  ‚Üí Web —Å–µ—Ä–≤–µ—Ä..."
WEB_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/complexity-score || echo "FAILED")
echo "    Web: $([ "$WEB_STATUS" = "405" ] && echo "OK (Method Not Allowed expected)" || echo "FAILED ($WEB_STATUS)")"

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞..."
make stats || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"

# –û—á–∏—Å—Ç–∫–∞
echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."
make cleanup || true

echo ""
echo "‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
echo "üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!"

# –í–æ–∑–≤—Ä–∞—Ç –≤ Hybrid —Ä–µ–∂–∏–º
make hybrid 